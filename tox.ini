[tox]
env_list =
    check-{style,security}
    py3{9,10,11}{,-oldestdeps,-devdeps}{,-cov}-parallel
    build-docs

[testenv:check-style]
description = check code style
skip_install = true
deps =
    ruff
commands =
    ruff . {posargs}

[testenv:check-security]
description = run bandit to check security compliance
skip_install = true
deps =
    bandit>=1.7
commands =
    bandit -r packagename -c bandit.yaml

[testenv:check-docs-links]
description = check the links in the HTML docs
change_dir = docs
extras = 
    docs
commands =
    sphinx-build -W -b linkcheck . _build/html

[testenv]
description =
    run tests
    devdeps: with the latest developer version of third-party dependencies
    oldestdeps: with the oldest supported versions of required dependencies
    pyargs: with `--pyargs` on installed package
    warnings: treating warnings as errors
    cov: with coverage
    parallel: using parallel processing
# Pass through the following environment variables which may be needed for the CI
pass_env =
    TOXENV
    CI
    CODECOV_*
    HOME
    CRDS_*
set_env =
    devdeps: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/astropy/simple https://pypi.anaconda.org/scientific-python-nightly-wheels/simple
extras =
    test
deps =
    xdist: pytest-xdist
    oldestdeps: minimum_dependencies
package =
    # necessary so that C extensions are available for import; see https://github.com/spacetelescope/jwst/issues/7386#issuecomment-1344371482
    !pyargs: editable
    pyargs: wheel
commands_pre =
    oldestdeps: minimum_dependencies packagename --filename requirements-min.txt
    oldestdeps: pip install -r requirements-min.txt
    devdeps: numpy>=0.0.dev0
    devdeps: astropy>=0.0.dev0
    pip freeze
commands =
    pytest \
    cov: --cov . --cov-report xml --cov-report term-missing \
    warnings: -W error \
    xdist: -n auto \
    pyargs: {toxinidir}/docs --pyargs jwst \
    {posargs}

[testenv:build-docs]
description = invoke sphinx-build to build the HTML docs
set_env =
    # Suppress display of matplotlib plots generated during docs build, if any
    MPLBACKEND=agg
extras = 
    docs
commands =
    sphinx-build -W docs docs/_build

